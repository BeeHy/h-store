import "ca/evanjones/protorpc/Protocol.proto";

package edu.brown.hstore;

// -----------------------------------
// MESSAGES
// -----------------------------------

enum MessageType {
    STATUS = 0;
    SHUTDOWN = 1;
    FORWARD_TXN = 2;
    DONE_PARTITIONS = 3;
}

message MessageRequest {
    required int32 sender_id = 1;
    required int32 dest_id = 2;
    required MessageType type = 3;
    optional bytes data = 4;
    optional int64 txn_id = 5;
    repeated int32 partitions = 6;
}

message MessageAcknowledgement {
    required int32 sender_id = 1;
    required int32 dest_id = 2;
    optional bytes data = 3;
    optional int64 txn_id = 4;
}

// -----------------------------------
// FRAGMENT TRANSFERS
// -----------------------------------

message Fragment {
    required int32 transaction_id = 1;
    required bytes work = 2;

    // If true then the fragment must be undoable using a call to Finish.
    required bool undoable = 3;
}

message FragmentDependency {
	required int32 dependency_id = 1;
    required bytes data = 2;
}

message FragmentTransfer {
    required int32 sender_partition_id = 1;
    required int32 dest_partition_id = 2;
    required int64 txn_id = 3;
    repeated FragmentDependency dependencies = 4;
}

message FragmentAcknowledgement {
    required int32 sender_partition_id = 1;
    required int32 dest_partition_id = 2;
    required int64 txn_id = 3;
}

// -----------------------------------
// SERVICE
// -----------------------------------

service HStoreService {
    rpc SendMessage(MessageRequest) returns (MessageAcknowledgement);
    rpc SendFragment (FragmentTransfer) returns (FragmentAcknowledgement);
}